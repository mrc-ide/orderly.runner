% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/queue.R
\name{Queue}
\alias{Queue}
\title{Object for managing running jobs on the redis queue}
\description{
Object for managing running jobs on the redis queue

Object for managing running jobs on the redis queue
}
\keyword{internal}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{controller}}{RRQ controller}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Queue-new}{\code{Queue$new()}}
\item \href{#method-Queue-submit}{\code{Queue$submit()}}
\item \href{#method-Queue-number_of_workers}{\code{Queue$number_of_workers()}}
\item \href{#method-Queue-get_status}{\code{Queue$get_status()}}
\item \href{#method-Queue-cancel}{\code{Queue$cancel()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-new"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-new}{}}}
\subsection{Method \code{new()}}{
Create object, read configuration and setup Redis connection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$new(queue_id = NULL, logs_dir = "logs/worker")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{queue_id}}{ID of an existing queue to connect to, creates a new one
if NULL (default NULL)}

\item{\code{logs_dir}}{directory to store worker logs}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-submit"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-submit}{}}}
\subsection{Method \code{submit()}}{
Submit a job the Redis queue for runner to run.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$submit(
  url,
  branch,
  ref,
  reportname,
  parameters,
  location,
  ssh_key = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{The URL of the Git repository containing the reports.}

\item{\code{branch}}{Name of git branch to checkout the repository.}

\item{\code{ref}}{Git commit-ish value (e.g HEAD or commit hash or branch name).}

\item{\code{reportname}}{Name of orderly report.}

\item{\code{parameters}}{Parameters to run the report with.}

\item{\code{location}}{Location of the outpack repository from which to pull
dependencies and push the produced packet.}

\item{\code{ssh_key}}{private SSH key for connecting to private repositories
(Optional, default is NULL).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-number_of_workers"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-number_of_workers}{}}}
\subsection{Method \code{number_of_workers()}}{
Gets the number of workers, only implemented until we add queue status for testing
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$number_of_workers()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-get_status"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-get_status}{}}}
\subsection{Method \code{get_status()}}{
Gets status of packet run
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$get_status(task_ids, include_logs = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task_ids}}{Task ids  to get status of.}

\item{\code{include_logs}}{Whether to include logs in response or not}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
status of redis queue job
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-cancel"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-cancel}{}}}
\subsection{Method \code{cancel()}}{
Gets status of packet run
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$cancel(task_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task_id}}{A single task to cancel}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing, or error if cancellation was not possible
}
}
}
